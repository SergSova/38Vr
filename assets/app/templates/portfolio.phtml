[[$head?&classes=`protfolio`]]

<header class="neww-headers">
    <div class="numb">
        <div class="numbers numb1" style="opacity: 0;">
            <div class="hd"><span>01.</span></div>
        </div>
        <div class="numbers numb2">
            <div class="hd"><span>01.</span></div>
        </div>
        <div class="numbers numb3">
            <div class="hd"><span>02.</span></div>
        </div>
    </div>

    <div class="main-menu">
        <ul>
            [[$main_menu]]
        </ul>
    </div>

    <div class="head-line">
        <div class="logo"><a href="[[++site_url]]"><img
                        src="/assets/img/logo.png" alt=""></a>
        </div>
        <div class="lang lang-mark">
            <div class="lang-block">
                <ul>
                    [[$lang_block]]
                </ul>
            </div>
        </div>
        <div class="menu"><img src="/assets/img/menu.png" alt=""></div>
        <div class="langy">
            <div class="lang-block">
                <ul>
                    [[$lang_block]]
                </ul>
            </div>
        </div>
    </div>
</header>


<div class="main">

    <div class="wrap-lines">
        <div class="wrap-container">
            <div class="line line1 active"></div>
            <div class="line line2"></div>
            <div class="line line3"></div>
            <div class="line line4"></div>
            <div class="line line5"></div>
            <div class="line line9"></div>
        </div>
    </div>


    <section class="sect sect002">
        <div class="fonn-arti"></div>
        <div class="container">
            <div class="portfolio portfolio-mark">

                [[!pdoCrumbs?
                &tplHome=`@INLINE
                <li><a href="[[++site_url]]"><img
                                src="/assets/img/homee.png" alt="">home</a>
                </li>
                `
                &showHome=`1`
                &showAtHome=`0`
                ]]

                <div id="selectyBoxi">
                    <div class="closs"><img src="/assets/img/closy.png" alt="">
                    </div>
                    <p class="valueTags" name="selects">category</p>
                    <div class="clear"></div>
                    <ul id="selectyMenuBoxi">
                        <li class="options">All</li>
                        [[pdoResources?
                        &parents=`[[*id]]`
                        &tpl=`@INLINE
                        <li class="options" data-parent="[[+id]]">
                            {{+pagetitle:strtolower:ucfirst}}
                        </li>
                        `
                        &showLog=`0`
                        &showUnpublished=`1`
                        &depth=`0`
                        ]]
                    </ul>
                </div>
                <h1>[[*pagetitle]]</h1>
                <div class="collection-wraper"></div>
            </div>
        </div>
    </section>


</div>

[[$menus_open]]


<script src="/assets/js/jquery-3.2.1.min.js"></script>
<script src="/assets/js/owl-carousel.min.js"></script>
<script src="/assets/js/nice.js"></script>
<script src="/assets/js/comon.js"></script>

<script>
    $(function () {
        $.get({
            url: '/ajax-portfolio',
            success: function (resp) {
                ans = $.parseHTML(resp);
                toSort = []

                for (i=0; i < ans.length; i++ ) {
                    if(i % 2 == 0) {
                        toSort.push(ans[i])
                    }
                }
                console.log(toSort);

                sorting(toSort)
            }
        });
//        function sorting(toSort) {
//            hash1 = /double-size/;
//            hash2 = /vertical/;
//            row = 0;
//            pos = 1;
//            elem =[];
//            rows = [];
//            rows[row] = [];
//            z = 0;
//            for (i=1; i < toSort.length+1; i++ ) {
//                pos % 3 == 0 ? (row += 1,  rows[row] = [], z = 0) : '';
//                if (hash1.test(toSort[i-1].classList.value)){
//                    rows[row][z] = {position:pos, size:2,html:toSort[i-1]};
//                    z++
//                    pos += 1;
//                    rows[row][z] = {position:pos,size:0};
//                    z++
//                    pos += 1;
//                }else if (hash2.test(toSort[i-1].classList.value)){
//                    rows[row][z] = {position:pos, size:3,html:toSort[i-1]};
//                    pos += 1;
//                    z++
//                }else {
//                    rows[row][z] = {position:pos, size:1,html:toSort[i-1]};
//                    pos += 1;
//                    z++
//                }
//
//            }
//            endSort = false
//        function afterSorting() {
//
//            for(i=0; i < rows.length; i++ ){
//                    if(rows[i].length < 3) {
//                        if( i < rows.length - 1) {
//                            if(endSort) {checkVertical();return true;}
//                            resort(i);
//                            return true;
//                        }else {
//                            checkVertical();
//                        }
//                    }
//                }
//
//
//        }
//        afterSorting();
//            function resort(i) {
//                j = 1;
//                k = 0;
//                z = true;
//                while (z) {
//                    if(rows[i+j][k].size != 2 && rows[i+j][k].size != 0) {
//                        rows[i][rows[i].length]  = rows[i+j][k];
//                        z =  rows[i+j].splice(k,1);
//                        z = false;
//                    }
//                    k+=1;
//                    rows[i+j].length  < k ? (j+=1, k = 0)  : ' ';
//                    if( i+j > rows.length - 1  ){ z = false;endSort = true;}
//                }
//                afterSorting();
//            }
//            function checkVertical() {
//                getVertPosition = vertItem();
//                checkUnic = ifUnic(getVertPosition);
//                console.log(checkUnic);
//
//
//
//            }
//            function ifUnic() {
//                for (i= 0; i< arr.length;i++){
//
//                }
//            }
//
//            function vertItem() {
//                var arr = ''
//                for(l=0; l < rows.length; l++ ) {
//                    for (o=0; o < rows[l].length; o++) {
//                        if(rows[l][o].size == 3) {
//                            if(l + 1 <= rows.length) {
//                                arr.push([l,o])
//                            }
//                        }
//                    }
//                }
//                return arr;
//            }

          /***/



//            function checkVertical() {
//
//                for(l=0; l < rows.length; l++ ) {
//                    for (o=0; o < rows[l].length; o++) {
//                        if(rows[l][o].size == 3) {
//                            if(l + 1 <= rows.length) {
//                                checkResort(l,o);
//                            }
//                        }
//                    }
//                }
//
//            }
//            function  checkResort(l,o) {
//
//                for (p = 0; p < rows[l+1].length; p++) {
//                    if(rows[l+1][p].size == 2) {
//                        sortVertic(p, l, o);
//                    }
//                }
//            }
//
//            function sortVertic(p, l, o){
//                severals = 0;
//                for (x = 0; x < rows[l].length; x++) {
//                    if(rows[l][x].size == 3){
//                        severals++
//                        console.log(severals+'jjj');
//                    }
//                }
//                collect(p,l,o,severals);
//            }
//            function collect(p,l,o,several) {
////                debugger
//
//                if(severals < 2 && p != null){
//                    console.log(rows);
//                    if(p == 0 && o !=2 ) {
//                        var eld = rows[l][o];
//                        var el1 = rows[l][o+1];
//
//                        console.log(el1);
//                        console.log('******');
//                        console.log(eld);
//                        g = rows[i].splice(rows[l][o],2);
//
//                        rows[l][o] = el1;
//                        rows[l][o + 1] = eld;
//
//                    }
//                }
//            }
//            console.log(rows);
//        }

        function sorting(toSort) {
            hash1 = /double-size/;
            hash2 = /vertical/;
            row = 0;
            pos = 1;
            nextRow = true;
            elem = [];
            elb = null;
            var rows =[]; rows[0] = [];rows[1] = [];rows[2] = [];

            z = 0;

            for (i = 1; i < toSort.length + 1; i++) {
                pos % 3 == 0 ? (row += 1, rows[row] = [], z = 0) : '';
                if (hash1.test(toSort[i - 1].classList.value)) {
                    rows[1].push({position: pos, size: 2, html: toSort[i - 1]});
                } else if (hash2.test(toSort[i - 1].classList.value)) {
                    rows[2].push({position: pos, size: 3, html: toSort[i - 1]});
                } else {
                    rows[0].push({position: pos, size: 1, html: toSort[i - 1]});
                }
                z++
            }

            function arrLen() {
                for (i=0; i < rows.length; i++) {
                    if(!rows[i].length) {
                        console.log('---------');
                        console.log(i);
                        console.log('---------');

                        k =  rows.splice(rows[i],1);
                    }
                }
                return rows.length;
            }
            function randEl(utnits) {
                return Math.floor(Math.random() * utnits);
            }

            function getLen() {
                return arrLen()
            }
            function getPos() {
                posEl3 = [];
                posEl2 = [];
                sortedArr = []
                z = 0;
                row = 1;
               while(rows.length) {
                   utnits = getLen();
                   el = randEl(utnits)
                   elArr = el ? rows[el][0] : undefined;
                   console.log(el);
                   console.log(rows);
                   if(elArr != undefined) {
                       if(el == 2 && z != 2) {
                           k = rows[el].splice(rows[el][0],1);
                           sortedArr.push(k);
                           posEl3 = [row, z];
                           z++
                       }else if(el == 1) {
                           if(posEl3.length) {
                                if(posEl3[1] == z ) {
                                    sortedArr.push({size:0});
                                    k = rows[el].splice(rows[el][0],1);
                                    sortedArr.push(k);
                                    z +=2;
                                }else {
                                    k = rows[el].splice(rows[el][0],1);
                                    sortedArr.push(k);
                                    z +=2;
                                }
                           }
                       }else if(el == 0) {
                           if(posEl3[1] == z ) {
                               sortedArr.push({size:0});
                               k = rows[el].splice(rows[el][0],1);
                               sortedArr.push(k);
                               z++;

                           }else {
                               k = rows[el].splice(rows[el][0],1);
                               sortedArr.push(k);
                               z++;
                           }

                       }
                   }

                   row = z % 3 ? row++ : row;

               }

            }getPos();

            console.log(sortedArr);

        }




//        function sorting(toSort) {
//            hash1 = /double-size/;
//            hash2 = /vertical/;
//            rows = 0;
//            row = 1;
//            pos = 1;
//            sortedGor = [];
//            for (i=1; i < toSort.length+1; i++ ) {
//                console.log(i);
//                if (hash1.test(toSort[i-1].classList.value)){
//                        if(pos%3 == 0) {
//                            sortedGor.push(toSort[i]);
//                            sortedGor.push(toSort[i-1]);
//                            i += 1;
//                        }
//                    pos += 2;
//                }else {
//                    sortedGor.push(toSort[i-1]);
//                    pos += 1;
//                }
//                pos % 3 == 0 ? row += 1 : '';
//                console.log('row' + row);
//            }
//            rows = row;
//            console.log('sorted');
//            console.log(sortedGor);
//            $('.collection-wraper').html(sortedGor);
//        }

        $('#selectyMenuBoxi li').on('click', function () {
            var data = $(this).data('parent');
            $.get({
                url: '/ajax-portfolio',
                data: {'parent': data},
                success: function (resp) {

                    $('.collection-wraper').html(resp);
                }
            });
        });
    });
</script>

</body>

</html>